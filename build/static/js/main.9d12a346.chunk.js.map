{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","exact","activeClassName","to","Form","useState","selected","setSelected","name","setName","email","setEmail","feedback","setFeedback","phoneNumber","setPhoneNumber","rating","setRating","nameError","setNameError","emailError","setEmailError","feedbackError","setFeedbackError","phoneNumberError","setPhoneNumberError","ratingError","setRatingError","htmlFor","type","maxLength","value","required","onChange","e","target","onSelect","code","showSelectedLabel","showOptionLabel","pattern","checked","onClick","preventDefault","errorMessage","ok","length","includes","Number","trim","isNaN","isValid","alert","data","temp","JSON","parse","localStorage","getItem","error","newData","push","setItem","stringify","Table","feedbackData","setFeedbackData","useEffect","console","log","style","span","map","item","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAiBeA,MAbf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASC,GAAG,IAAIH,UAAU,WAAzD,kBAGA,cAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASC,GAAG,SAASH,UAAU,WAA9D,uB,uBC0NGI,MAhOf,WACI,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAA4BV,mBAAS,IAArC,mBAAOW,EAAP,KAAeC,EAAf,KAEA,EAAkCZ,mBAAS,IAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAoCd,mBAAS,IAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAA0ChB,mBAAS,IAAnD,mBAAOiB,EAAP,KAAsBC,EAAtB,KACA,EAAgDlB,mBAAS,IAAzD,mBAAOmB,EAAP,KAAyBC,EAAzB,KACA,EAAsCpB,mBAAS,IAA/C,mBAAOqB,EAAP,KAAoBC,EAApB,KAkEA,OACI,sBAAK3B,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,eAAb,0BACA,mBAAGA,UAAU,oBAAb,wKAMJ,uBAAMA,UAAU,kBAAhB,UAEI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,uBAAO4B,QAAQ,iBAAf,6BACA,uBACIC,KAAK,OACLC,UAAU,KACVtB,KAAK,iBACLuB,MAAOvB,EACPwB,UAAQ,EACRC,SAAU,SAAAC,GAAC,OAAIzB,EAAQyB,EAAEC,OAAOJ,UAEpC,mBAAG/B,UAAU,cAAb,SAA4BkB,OAEhC,sBAAKlB,UAAU,eAAf,UACI,uBAAO4B,QAAQ,mBAAf,2BACA,sBAAK5B,UAAU,yBAAf,UACI,cAAC,IAAD,CACIA,UAAU,wBACVM,SAAUA,EACV8B,SAAU,SAAAC,GAAI,OAAI9B,EAAY8B,IAC9BC,mBAAmB,EACnBC,iBAAiB,IAErB,uBACIV,KAAK,MACLW,QAAQ,mBACRhC,KAAK,mBACLuB,MAAOjB,EACPkB,UAAQ,EACRC,SAAU,SAAAC,GAAC,OAAInB,EAAemB,EAAEC,OAAOJ,aAG/C,mBAAG/B,UAAU,cAAb,SAA4BwB,OAGhC,sBAAKxB,UAAU,eAAf,UACI,uBAAO4B,QAAQ,2BAAf,iCACA,0BACII,UAAQ,EACRhC,UAAU,2BACV6B,KAAK,OACLC,UAAW,MACXtB,KAAK,2BACLuB,MAAOnB,EACPqB,SAAU,SAAAC,GAAC,OAAIrB,EAAYqB,EAAEC,OAAOJ,UAExC,mBAAG/B,UAAU,cAAb,SAA4BsB,UAIpC,sBAAKtB,UAAU,uBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,uBAAO4B,QAAQ,sBAAf,iCACA,uBACIC,KAAK,QACLrB,KAAK,sBACLwB,UAAQ,EACRD,MAAOrB,EACPuB,SAAU,SAAAC,GAAC,OAAIvB,EAASuB,EAAEC,OAAOJ,UAErC,mBAAG/B,UAAU,cAAb,SAA4BoB,OAGhC,mBAAGpB,UAAU,wBAAb,2BACA,sBAAKA,UAAU,eAAf,UAEI,gCACI,uBACI6B,KAAK,QACLrB,KAAK,QACLuB,MAAM,YACNU,QAAkB,cAATzB,EACT0B,QAAS,SAAAR,GAAC,OAAIjB,EAAU,gBAE5B,uBAAOW,QAAQ,QAAf,0BAGJ,gCACI,uBACIC,KAAK,QACLrB,KAAK,QACLuB,MAAM,OACNU,QAAkB,SAATzB,EACT0B,QAAS,SAAAR,GAAC,OAAIjB,EAAU,WAE5B,uBAAOW,QAAQ,QAAf,qBAGJ,gCACI,uBACIC,KAAK,QACLrB,KAAK,QACLuB,MAAM,OACNU,QAAkB,SAATzB,EACT0B,QAAS,SAAAR,GAAC,OAAIjB,EAAU,WAE5B,uBAAOW,QAAQ,QAAf,qBAGJ,gCACI,uBACIC,KAAK,QACLrB,KAAK,QACLuB,MAAM,MACNU,QAAkB,QAATzB,EACT0B,QAAS,SAAAR,GAAC,OAAIjB,EAAU,UAE5B,uBAAOW,QAAQ,QAAf,uBAGNZ,EAEE,sBAAKhB,UAAU,QAAf,UACKgB,EACY,cAAXA,EAA0B,iDAA0B,GACzC,SAAXA,EAAqB,iDAA0B,GACpC,SAAXA,EAAqB,iDAA0B,GACpC,QAAXA,EAAoB,iDAA0B,MAElD,GAEN,mBAAGhB,UAAU,cAAb,SAA4B0B,OAGhC,wBAAQ1B,UAAU,eAAe6B,KAAK,SAASa,QA/JtC,SAACR,GAElB,GADAA,EAAES,iBA1CN,WACI,IAAMC,EAAe,iCACjBC,GAAI,EAoCR,OAlCIrC,EAICW,EAAa,KAHd0B,GAAI,EACJ1B,EAAayB,KAIT,OAALlC,QAAK,IAALA,OAAA,EAAAA,EAAOoC,SAAU,MAAa,OAALpC,QAAK,IAALA,OAAA,EAAAA,EAAOqC,SAAS,kBAAhB,OAAiCrC,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAOqC,SAAS,gBACzEF,GAAG,EAEExB,EADDX,EACe,sFADMkC,IAGxBvB,EAAc,IAEfT,EAICW,EAAiB,KAHlBsB,GAAG,EACHtB,EAAiBqB,IAIlBI,OAAM,OAAClC,QAAD,IAACA,OAAD,EAACA,EAAamC,QAAU,KAC1BD,OAAM,OAAClC,QAAD,IAACA,OAAD,EAACA,EAAamC,OAAO,IAAM,GACjCC,MAAMF,OAAM,OAAClC,QAAD,IAACA,OAAD,EAACA,EAAamC,UAC7BJ,GAAG,EAEEpB,EADDX,EACqB,sEADY8B,IAGpCnB,EAAoB,IAErBT,EAICW,EAAe,KAHhBkB,GAAG,EACHlB,EAAeiB,IAIZC,EAKJM,GAAU,CAAC,IAAD,EACTC,MAAM,+BACN,IAAIC,EAAO,GACX,IACI,IAAIC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,wBAC1C,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAMR,UAAQO,EAAOC,GAC1B,MAAOK,GACLP,MAAMO,EAAMf,cAEhB,IAAIgB,EAAU,CACVpD,KAAMA,EACNE,MAAOA,EACPI,YAAaA,EACbF,SAAUA,EACVI,OAAQA,GAER,QAAJ,EAAAqC,SAAA,SAAMQ,KAAKD,GACXH,aAAaK,QAAQ,qBAAsBP,KAAKQ,UAAUV,MA4ItD,2B,MC7JDW,MA1Df,WAEI,MAAwC3D,mBAAS,IAAjD,mBAAO4D,EAAP,KAAqBC,EAArB,KAOA,OALAC,qBAAU,WACN,IAAId,EAAOE,KAAKC,MAAMC,aAAaC,QAAQ,uBAC3CQ,EAAgBb,KACjB,IAGC,sBAAKrD,UAAU,QAAf,UACI,8CACCoE,QAAQC,IAAIJ,GACT,qBAAKK,MAAO,CAAC,SAAY,QAAzB,SACI,kCACI,qCACI,qBAAKC,KAAK,IAAID,MAAO,CAAC,MAAS,SAC/B,qBAAKC,KAAK,IAAID,MAAO,CAAC,MAAS,SAC/B,qBAAKC,KAAK,IAAID,MAAO,CAAC,MAAS,SAC/B,qBAAKC,KAAK,IAAID,MAAO,CAAC,MAAS,SAC/B,qBAAKC,KAAK,IAAID,MAAO,CAAC,MAAS,YAGnC,gCACI,+BACI,sCACA,6CACA,6CACA,0CACA,6CAIR,uCACKL,QADL,IACKA,OADL,EACKA,EAAcO,KAAI,SAAAC,GAAI,OAQnB,cAPA,CAOA,gBACI,oCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAMjE,OACX,oCAAKiE,QAAL,IAAKA,OAAL,EAAKA,EAAM3D,cACX,oCAAK2D,QAAL,IAAKA,OAAL,EAAKA,EAAM/D,QACX,oCAAK+D,QAAL,IAAKA,OAAL,EAAKA,EAAM7D,WACX,oCAAK6D,QAAL,IAAKA,OAAL,EAAKA,EAAMzD,0BC5BhC0D,MAff,WACC,OACC,qBAAK1E,UAAU,MAAf,SACC,eAAC,IAAD,WACC,qDACA,cAAC,EAAD,IACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAO2E,KAAK,IAAI1E,OAAK,EAAC2E,UAAW,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOD,KAAK,SAAS1E,OAAK,EAAC2E,UAAW,kBAAM,cAAC,EAAD,gBCHlCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d12a346.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css';\nimport { Link, NavLink } from \"react-router-dom\";\n\nfunction Navbar() {\n    return (\n        <nav className=\"navbar\">\n            <NavLink exact activeClassName=\"active\" to=\"/\" className=\"inactive\">\n                Form\n            </NavLink>\n            <NavLink exact activeClassName=\"active\" to=\"/table\" className=\"inactive\">\n                Table\n            </NavLink>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport './Form.css';\nimport ReactFlagsSelect from 'react-flags-select';\n\nfunction Form() {\n    const [selected, setSelected] = useState('IN');\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [feedback, setFeedback] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [rating, setRating] = useState('');\n\n    const [nameError, setNameError] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [feedbackError, setFeedbackError] = useState('');\n    const [phoneNumberError, setPhoneNumberError] = useState('');\n    const [ratingError, setRatingError] = useState('');\n\n    function isValid() {\n        const errorMessage = 'Error: This is mandatory field';\n        var ok= true;\n\n        if(!name) {\n            ok= false;\n            setNameError(errorMessage);\n        }\n        else setNameError('');\n\n        if(email?.length <= 10 || !(email?.includes('@gmail.com') || email?.includes('@yahoo.com'))){\n            ok=false;\n            if(!email) setEmailError(errorMessage);\n            else setEmailError(\"Please enter the email id in proper format. example: abc@gmail.com || abc@yahoo.com\");\n        }\n        else setEmailError('');\n\n        if(!feedback){\n            ok=false;\n            setFeedbackError(errorMessage);\n        }\n        else setFeedbackError('');\n\n        if(Number(phoneNumber?.trim()) < 7000000000 \n            || Number(phoneNumber?.trim()[0]) < 7\n            || isNaN(Number(phoneNumber?.trim()))){\n            ok=false;\n            if(!phoneNumber) setPhoneNumberError(errorMessage)\n            else setPhoneNumberError(\"Please enter the Phone number in proper format. example: 9786312456\");\n        }\n        else setPhoneNumberError('');\n\n        if(!rating){\n            ok=false;\n            setRatingError(errorMessage);\n        }\n        else setRatingError('');\n\n        return ok;\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(isValid()){\n            alert(\"Form Submitted Successfully\");\n            var data = [];\n            try {\n                var temp= JSON.parse(localStorage.getItem('feedback-data-list'));\n                if(temp?.length) data = temp;\n            } catch (error) {\n                alert(error.errorMessage);\n            }\n            let newData = {\n                name: name,\n                email: email,\n                phoneNumber: phoneNumber,\n                feedback: feedback,\n                rating: rating,\n            }\n            data?.push(newData);\n            localStorage.setItem('feedback-data-list', JSON.stringify(data));\n        }\n    }\n\n    return (\n        <div className=\"form\">\n            <div className=\"form__info\">\n                <p className=\"form__header\">Aromatic Bar</p>\n                <p className=\"form__description\">We are committed to providing you with the best\n                    dining experience possible, so we welcome your comments. Please fill\n                    out this questionnaire. Thank you.\n                </p>\n            </div>\n\n            <form className=\"form__container\">\n\n                <div className=\"form__container__col\">\n                    <div className=\"form__inputs\">\n                        <label htmlFor=\"customer__name\">Customer's Name</label>\n                        <input \n                            type=\"text\" \n                            maxLength=\"50\" \n                            name=\"customer__name\"\n                            value={name}\n                            required\n                            onChange={e => setName(e.target.value)}\n                        />\n                        <p className=\"form__error\">{nameError}</p>\n                    </div>\n                    <div className=\"form__inputs\">\n                        <label htmlFor=\"customer__number\">Mobile Number</label>\n                        <div className=\"form__customer__number\">\n                            <ReactFlagsSelect\n                                className=\"form__container__flag\"\n                                selected={selected}\n                                onSelect={code => setSelected(code)}\n                                showSelectedLabel={false}\n                                showOptionLabel={false}\n                            />\n                            <input \n                                type=\"tel\" \n                                pattern=\"[7-9]{1}[0-9]{9}\" \n                                name=\"customer__number\"\n                                value={phoneNumber}\n                                required\n                                onChange={e => setPhoneNumber(e.target.value)}\n                            />\n                        </div>\n                        <p className=\"form__error\">{phoneNumberError}</p>\n                    </div>\n\n                    <div className=\"form__inputs\">\n                        <label htmlFor=\"customer__feedback__text\">Customer's Feedback</label>\n                        <textarea \n                            required\n                            className=\"customer__feedback__text\"\n                            type=\"text\" \n                            maxLength= \"250\"\n                            name=\"customer__feedback__text\"\n                            value={feedback}\n                            onChange={e => setFeedback(e.target.value)}\n                        />\n                        <p className=\"form__error\">{feedbackError}</p>\n                    </div>\n\n                </div>\n                <div className=\"form__container__col\">\n                    <div className=\"form__inputs\">\n                        <label htmlFor=\"customer__email__id\">Customer's Email Id</label>\n                        <input \n                            type=\"email\"\n                            name=\"customer__email__id\"\n                            required\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                        <p className=\"form__error\">{emailError}</p>\n                    </div>\n\n                    <p className=\"form__rate__our__food\">Rate our Food</p>\n                    <div className=\"form__rating\">\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"rate3\"\n                                value=\"Excellent\"\n                                checked={rating===\"Excellent\"}\n                                onClick={e => setRating(\"Excellent\")}\n                            />\n                            <label htmlFor=\"rate3\">Excellent</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"rate2\"\n                                value=\"Good\"\n                                checked={rating===\"Good\"}\n                                onClick={e => setRating(\"Good\")}\n                            />\n                            <label htmlFor=\"rate2\">Good</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"rate1\"\n                                value=\"Fair\"\n                                checked={rating===\"Fair\"}\n                                onClick={e => setRating(\"Fair\")}\n                            />\n                            <label htmlFor=\"rate1\">Fair</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"rate0\"\n                                value=\"Bad\"\n                                checked={rating===\"Bad\"}\n                                onClick={e => setRating(\"Bad\")}\n                            />\n                            <label htmlFor=\"rate0\">Bad</label>\n                        </div>\n                    </div>\n                    {(rating) \n                        ? \n                        <div className=\"emoji\">\n                            {rating}\n                            {(rating === \"Excellent\") ? <span> &#128523;</span> : \"\"}\n                            {(rating === \"Good\") ? <span> &#128515;</span> : \"\"}\n                            {(rating === \"Fair\") ? <span> &#128578;</span> : \"\"}\n                            {(rating === \"Bad\") ? <span> &#128533;</span> : \"\"}\n                        </div>\n                        : \"\"\n                    }\n                    <p className=\"form__error\">{ratingError}</p>\n                </div>\n\n                <button className=\"form__submit\" type=\"button\" onClick={handleSubmit}>\n                    Submit\n                </button>\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default Form;\n","import React, { useState, useEffect } from 'react';\nimport './Table.css';\n\nfunction Table() {\n\n    const [feedbackData, setFeedbackData] = useState([]);\n\n    useEffect(() => {\n        var data = JSON.parse(localStorage.getItem('feedback-data-list'));\n        setFeedbackData(data)\n    }, [])\n\n    return (\n        <div className=\"table\">\n            <h2>All Feedback</h2>\n            {console.log(feedbackData)}\n                <div style={{\"overflow\": \"auto\"}}>\n                    <table>\n                        <colgroup>\n                            <col span=\"1\" style={{\"width\": \"10%\"}} />\n                            <col span=\"1\" style={{\"width\": \"10%\"}}/>\n                            <col span=\"1\" style={{\"width\": \"20%\"}} />\n                            <col span=\"2\" style={{\"width\": \"50%\"}} />\n                            <col span=\"1\" style={{\"width\": \"10%\"}} />\n                        </colgroup>\n\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Phone Field</th>\n                                <th>Email Field</th>\n                                <th>Feedback</th>\n                                <th>rating</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {feedbackData?.map(item => (\n                                // <TableBody\n                                //     name= {item?.name}\n                                //     phoneNumber= {item?.phoneNumber}\n                                //     email= {item?.email}\n                                //     feedback= {item?.feedback}\n                                //     rating= {item?.rating}\n                                // />,\n                                <tr>\n                                    <td>{item?.name}</td>\n                                    <td>{item?.phoneNumber}</td>\n                                    <td>{item?.email}</td>\n                                    <td>{item?.feedback}</td>\n                                    <td>{item?.rating}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n\n                    </table>\n                </div>\n        </div>\n    )\n}\n\nexport default Table;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Form from './components/Form';\nimport Table from './components/Table';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<h1>Restaurant Analyser</h1>\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={() => <Form />} />\n\t\t\t\t\t<Route path=\"/table\" exact component={() => <Table />} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t  \t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}