[{"/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/index.js":"1","/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/App.js":"2","/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/reportWebVitals.js":"3","/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/components/Navbar.js":"4","/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/components/Form.js":"5","/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/components/Table.js":"6"},{"size":500,"mtime":1631783365676,"results":"7","hashOfConfig":"8"},{"size":547,"mtime":1631862157571,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1631783365676,"results":"10","hashOfConfig":"8"},{"size":470,"mtime":1631862153991,"results":"11","hashOfConfig":"8"},{"size":9034,"mtime":1631857737342,"results":"12","hashOfConfig":"8"},{"size":2330,"mtime":1631856584446,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1hkyeab",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/index.js",[],["28","29"],"/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/App.js",[],"/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/reportWebVitals.js",[],"/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/components/Navbar.js",["30"],"/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/components/Form.js",["31"],"import React, { useState, useEffect } from 'react';\nimport './Form.css';\nimport ReactFlagsSelect from 'react-flags-select';\n\nfunction Form() {\n    const [selected, setSelected] = useState('IN');\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [feedback, setFeedback] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [rating, setRating] = useState('');\n\n    const [nameError, setNameError] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [feedbackError, setFeedbackError] = useState('');\n    const [phoneNumberError, setPhoneNumberError] = useState('');\n    const [ratingError, setRatingError] = useState('');\n\n    function isValid() {\n        const errorMessage = 'Error: This is mandatory field';\n        var ok= true;\n\n        if(!name) {\n            ok= false;\n            setNameError(errorMessage);\n        }\n        else setNameError('');\n\n        if(email?.length <= 10 || !(email?.includes('@gmail.com') || email?.includes('@yahoo.com'))){\n            ok=false;\n            if(!email) setEmailError(errorMessage);\n            else setEmailError(\"Please enter the email id in proper format. example: abc@gmail.com || abc@yahoo.com\");\n        }\n        else setEmailError('');\n\n        if(!feedback){\n            ok=false;\n            setFeedbackError(errorMessage);\n        }\n        else setFeedbackError('');\n\n        if(Number(phoneNumber?.trim()) < 7000000000 \n            || Number(phoneNumber?.trim()[0]) < 7\n            || isNaN(Number(phoneNumber?.trim()))){\n            ok=false;\n            if(!phoneNumber) setPhoneNumberError(errorMessage)\n            else setPhoneNumberError(\"Please enter the Phone number in proper format. example: 9786312456\");\n        }\n        else setPhoneNumberError('');\n\n        if(!rating){\n            ok=false;\n            setRatingError(errorMessage);\n        }\n        else setRatingError('');\n\n        return ok;\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(isValid()){\n            alert(\"Form Submitted Successfully\");\n            var data = [];\n            try {\n                var temp= JSON.parse(localStorage.getItem('feedback-data-list'));\n                if(temp?.length) data = temp;\n            } catch (error) {\n                alert(error.errorMessage);\n            }\n            let newData = {\n                name: name,\n                email: email,\n                phoneNumber: phoneNumber,\n                feedback: feedback,\n                rating: rating,\n            }\n            data?.push(newData);\n            localStorage.setItem('feedback-data-list', JSON.stringify(data));\n        }\n    }\n\n    return (\n        <div className=\"form\">\n            <div className=\"form__info\">\n                <p className=\"form__header\">Aromatic Bar</p>\n                <p className=\"form__description\">We are committed to providing you with the best\n                    dining experience possible, so we welcome your comments. Please fill\n                    out this questionnaire. Thank you.\n                </p>\n            </div>\n\n            <form className=\"form__container\">\n\n                <div className=\"form__container__col\">\n                    <div className=\"form__inputs\">\n                        <label htmlFor=\"customer__name\">Customer's Name</label>\n                        <input \n                            type=\"text\" \n                            maxLength=\"50\" \n                            name=\"customer__name\"\n                            value={name}\n                            required\n                            onChange={e => setName(e.target.value)}\n                        />\n                        <p className=\"form__error\">{nameError}</p>\n                    </div>\n                    <div className=\"form__inputs\">\n                        <label htmlFor=\"customer__number\">Mobile Number</label>\n                        <div className=\"form__customer__number\">\n                            <ReactFlagsSelect\n                                className=\"form__container__flag\"\n                                selected={selected}\n                                onSelect={code => setSelected(code)}\n                                showSelectedLabel={false}\n                                showOptionLabel={false}\n                            />\n                            <input \n                                type=\"tel\" \n                                pattern=\"[7-9]{1}[0-9]{9}\" \n                                name=\"customer__number\"\n                                value={phoneNumber}\n                                required\n                                onChange={e => setPhoneNumber(e.target.value)}\n                            />\n                        </div>\n                        <p className=\"form__error\">{phoneNumberError}</p>\n                    </div>\n\n                    <div className=\"form__inputs\">\n                        <label htmlFor=\"customer__feedback__text\">Customer's Feedback</label>\n                        <textarea \n                            required\n                            className=\"customer__feedback__text\"\n                            type=\"text\" \n                            maxLength= \"250\"\n                            name=\"customer__feedback__text\"\n                            value={feedback}\n                            onChange={e => setFeedback(e.target.value)}\n                        />\n                        <p className=\"form__error\">{feedbackError}</p>\n                    </div>\n\n                </div>\n                <div className=\"form__container__col\">\n                    <div className=\"form__inputs\">\n                        <label htmlFor=\"customer__email__id\">Customer's Email Id</label>\n                        <input \n                            type=\"email\"\n                            name=\"customer__email__id\"\n                            required\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                        <p className=\"form__error\">{emailError}</p>\n                    </div>\n\n                    <p className=\"form__rate__our__food\">Rate our Food</p>\n                    <div className=\"form__rating\">\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"rate3\"\n                                value=\"Excellent\"\n                                checked={rating===\"Excellent\"}\n                                onClick={e => setRating(\"Excellent\")}\n                            />\n                            <label htmlFor=\"rate3\">Excellent</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"rate2\"\n                                value=\"Good\"\n                                checked={rating===\"Good\"}\n                                onClick={e => setRating(\"Good\")}\n                            />\n                            <label htmlFor=\"rate2\">Good</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"rate1\"\n                                value=\"Fair\"\n                                checked={rating===\"Fair\"}\n                                onClick={e => setRating(\"Fair\")}\n                            />\n                            <label htmlFor=\"rate1\">Fair</label>\n                        </div>\n\n                        <div>\n                            <input \n                                type=\"radio\" \n                                name=\"rate0\"\n                                value=\"Bad\"\n                                checked={rating===\"Bad\"}\n                                onClick={e => setRating(\"Bad\")}\n                            />\n                            <label htmlFor=\"rate0\">Bad</label>\n                        </div>\n                    </div>\n                    {(rating) \n                        ? \n                        <div className=\"emoji\">\n                            {rating}\n                            {(rating === \"Excellent\") ? <span> &#128523;</span> : \"\"}\n                            {(rating === \"Good\") ? <span> &#128515;</span> : \"\"}\n                            {(rating === \"Fair\") ? <span> &#128578;</span> : \"\"}\n                            {(rating === \"Bad\") ? <span> &#128533;</span> : \"\"}\n                        </div>\n                        : \"\"\n                    }\n                    <p className=\"form__error\">{ratingError}</p>\n                </div>\n\n                <button className=\"form__submit\" type=\"button\" onClick={handleSubmit}>\n                    Submit\n                </button>\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default Form;\n","/home/lokesh/Documents/Assignments/Restaurant Analyser/restaurant-analyser/src/components/Table.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":10,"nodeType":"38","messageId":"39","endLine":3,"endColumn":14},{"ruleId":"36","severity":1,"message":"40","line":1,"column":27,"nodeType":"38","messageId":"39","endLine":1,"endColumn":36},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]